# Idealistats

```elixir
Mix.install([
  {:fast64, "~> 0.1.3"},
  {:tesla, "~> 1.8.0"},
  {:explorer, "~> 0.7.2"},
  {:kino_vega_lite, "~> 0.1.11"},
  {:jason, "~> 1.4.1"},
  {:kino_maplibre, "~> 0.1.10"},
  {:nimble_options, "~> 1.0"},
  {:idealistats, path: __DIR__}
])
```

## ID and secret

```elixir
auth = File.read!("#{__DIR__}/auth.json") |> Jason.decode!(keys: :atoms)
```

## Getting auth token

```elixir
auth
|> Auth.get_header()
|> Auth.get_token()
```

## Getting data from Idealista

```elixir
(res = %{"elementList" => elements}) =
  Auth.get_header(auth)
  |> Auth.get_token()
  |> Idealistats.get_page(1, operation: "sale", propertyType: "homes", locationId: "0-EU-ES-28")

Map.drop(res, ["elementList"])
```

```elixir
{la, lo} =
  elements
  |> Enum.filter(fn element -> element["latitude"] != nil and element["longitude"] != nil end)
  |> Enum.map(fn p ->
    %{"latitude" => la, "longitude" => lo} = Map.take(p, ["latitude", "longitude"])

    {la, lo}
  end)
  |> Enum.unzip()

:ok
```

```elixir
homes = %{"longitude" => lo, "latitude" => la}

avg = &(Enum.sum(&1) / Enum.count(&1))

lo_avg = avg.(lo)
la_avg = avg.(la)

MapLibre.new(center: {lo_avg, la_avg}, zoom: 8, style: :street)
|> MapLibre.add_table_source("homes", homes, {:lng_lat, ["longitude", "latitude"]})
|> MapLibre.add_layer(
  id: "homes",
  type: :circle,
  # type: :heatmap,
  source: "homes"
)
```
